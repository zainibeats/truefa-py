# Windows Docker container for TrueFA-Py
# Testing the Rust cryptography implementation on Windows

# Start with Windows Server Core and Python
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set shell to PowerShell
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# Install Chocolatey package manager
RUN Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Install Python 3.10 and required tools
RUN choco install -y python --version=3.10.11
RUN choco install -y vcredist140
RUN choco install -y visualstudio2022buildtools
RUN choco install -y git

# Create app directory
WORKDIR C:/app

# Copy the entire repository
COPY . .

# Install Python dependencies
RUN python -m pip install --upgrade pip; \
    python -m pip install -r requirements.txt

# Create necessary directories with proper permissions
RUN New-Item -ItemType Directory -Path "C:/data/.truefa" -Force; \
    New-Item -ItemType Directory -Path "C:/data/.truefa/exports" -Force; \
    New-Item -ItemType Directory -Path "C:/data/images" -Force

# Set environment variables for Rust implementation testing
ENV TRUEFA_DATA_DIR=C:/data/.truefa
ENV TRUEFA_IMAGES_DIR=C:/data/images
ENV TRUEFA_DEBUG_CRYPTO=1
ENV TRUEFA_USE_FALLBACK=0
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=C:/app

# Create volumes for persistent data
VOLUME C:/data/.truefa
VOLUME C:/data/images

# Copy pre-built DLL (if not building in container)
COPY rust_crypto/target/release/truefa_crypto.dll C:/app/src/truefa_crypto/truefa_crypto.dll

# Create test batch file
RUN echo '@echo off' > C:/app/run_test.bat
RUN echo 'echo === TrueFA-Py Windows Container Test (Rust DLL) ===' >> C:/app/run_test.bat
RUN echo 'set PYTHONPATH=C:\\app;C:\\app\\src' >> C:/app/run_test.bat
RUN echo 'cd C:\\app' >> C:/app/run_test.bat
RUN echo 'echo Testing Rust DLL functionality...' >> C:/app/run_test.bat
RUN echo 'python dev-tools/tests/test_rust_dll.py' >> C:/app/run_test.bat
RUN echo 'if %ERRORLEVEL% NEQ 0 (' >> C:/app/run_test.bat
RUN echo '  echo Rust DLL test failed!' >> C:/app/run_test.bat
RUN echo '  exit /b 1' >> C:/app/run_test.bat
RUN echo ')' >> C:/app/run_test.bat
RUN echo 'echo All tests passed successfully!' >> C:/app/run_test.bat
RUN echo 'echo Starting TrueFA-Py...' >> C:/app/run_test.bat
RUN echo 'python src/main_opencv.py' >> C:/app/run_test.bat

# Set the entry point
ENTRYPOINT ["cmd", "/c", "C:/app/run_test.bat"] 